<Page x:Class="NijieDownloader.UI.BatchDownloadPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mui="http://firstfloorsoftware.com/ModernUI"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      xmlns:vm="clr-namespace:NijieDownloader.UI.ViewModel"
      xmlns:local="clr-namespace:NijieDownloader.UI"
      xmlns:lib="clr-namespace:NijieDownloader.Library.Model;assembly=NijieDownloader.Library"
      mc:Ignorable="d"
      d:DesignHeight="600" d:DesignWidth="800" Loaded="Page_Loaded">
    <Page.Resources>
        <local:JobStatusToVisibilityConverter x:Key="JobStatusConverter" />
        <Style TargetType="ProgressBar">
            <Style.Triggers>
                <Trigger Property="Maximum" Value="0">
                    <Setter Property="IsIndeterminate" Value="True" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="ErrorDetailTemplate">
            <StackPanel>
                <DataGrid AutoGenerateColumns="False" AlternatingRowBackground="Gainsboro"
                          AlternationCount="2" ColumnWidth="Auto" CanUserAddRows="False"
                          ItemsSource="{Binding Path=Exceptions}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Url" Width="200" Binding="{Binding Path=Url, Mode=OneWay}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Filename" Width="200" Binding="{Binding Path=Filename, Mode=OneWay}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Message" Width="500" Binding="{Binding Path=Message, Mode=OneWay}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Exceptions.Count}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
        </DataTemplate>
    </Page.Resources>
    <Page.CommandBindings>
        <CommandBinding Command="{x:Static local:BatchDownloadPage.StartCommand}"
                        Executed="ExecuteStartCommand"
                        CanExecute="CanExecuteStartCommand" />
        <CommandBinding Command="{x:Static local:BatchDownloadPage.StopCommand}"
                        Executed="ExecuteStopCommand"
                        CanExecute="CanExecuteStopCommand" />
        <CommandBinding Command="{x:Static local:BatchDownloadPage.PauseCommand}"
                        Executed="ExecutePauseCommand"
                        CanExecute="CanExecutePauseCommand" />
        <CommandBinding Command="{x:Static local:BatchDownloadPage.AddJobCommand}"
                        Executed="ExecuteAddJobCommand"
                        CanExecute="CanExecuteAddJobCommand" />
        <CommandBinding Command="{x:Static local:BatchDownloadPage.EditJobCommand}"
                        Executed="ExecuteEditJobCommand"
                        CanExecute="CanExecuteEditJobCommand" />
        <CommandBinding Command="{x:Static local:BatchDownloadPage.ClearAllCommand}"
                        Executed="ExecuteClearAllCommand"
                        CanExecute="CanExecuteClearAllCommand" />
        <CommandBinding Command="{x:Static local:BatchDownloadPage.DeleteCommand}"
                        Executed="ExecuteDeleteCommand"
                        CanExecute="CanExecuteDeleteCommand" />
    </Page.CommandBindings>
    <Grid Style="{StaticResource ContentRoot}">
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Text="Batch Download" Style="{StaticResource Heading2}" />
        <DockPanel Grid.Row="1">
            <StackPanel DockPanel.Dock="Top"  Orientation="Vertical">
                <StackPanel Orientation="Horizontal">
                    <Button Name="btnAdd" Margin="10,0,0,10" Content="Add"
                            Command="{x:Static local:BatchDownloadPage.AddJobCommand}" />
                    <Button Name="btnDelete" Margin="10,0,0,10" Content="Delete"
                            Command="{x:Static local:BatchDownloadPage.DeleteCommand}" />
                    <Button Name="btnStart" Margin="10,0,0,10" Content="Start"
                            Command="{x:Static local:BatchDownloadPage.StartCommand}" />
                    <Button Name="btnPause" Margin="10,0,0,10" Content="Pause"
                            Command="{x:Static local:BatchDownloadPage.PauseCommand}" />
                    <Button Name="btnStop" Margin="10,0,0,10" Content="Stop"
                            Command="{x:Static local:BatchDownloadPage.StopCommand}" />
                    <Button Name="btnSave" Margin="10,0,0,10" Content="Save" Click="btnSave_Click" />
                    <Button Name="btnLoad" Margin="10,0,0,10" Content="Load" Click="btnLoad_Click" />
                    <Button Name="btnClearAll" Margin="10,0,0,10" Content="Clear All"
                            Command="{x:Static local:BatchDownloadPage.ClearAllCommand}" />
                    <Button Name="btnResetSort" Margin="10,0,0,10" Content="Reset Sort" Click="btnResetSort_Click" />
                    <TextBlock Margin="10,5,0,10" Text="{Binding Path=JobRunner.BatchStatus}" />
                </StackPanel>
            </StackPanel>
            <ScrollViewer SizeChanged="ScrollViewer_SizeChanged">
                <DataGrid AutoGenerateColumns="False" Name="dgvJobList" ItemsSource="{Binding Path=ViewData}"
                          AlternatingRowBackground="Gainsboro"  AlternationCount="2" ColumnWidth="Auto"
                          IsSynchronizedWithCurrentItem="True" CanUserAddRows="False" RowHeaderWidth="0"
                          RowDetailsTemplate="{StaticResource ErrorDetailTemplate}">
                    <DataGrid.CellStyle>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=HasError}" Value="True">
                                    <Setter Property="DataGridCell.Background" Value="Pink" />
                                    <Setter Property="DataGridCell.BorderBrush" Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="#">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center"
                                              IsChecked="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Type" Width="100" Binding="{Binding Path=JobType, Mode=OneWay}" />
                        <DataGridTextColumn Header="Name" Width="3*" Binding="{Binding Path=Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Message" Width="7*" Binding="{Binding Path=Message, Mode=OneWay}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="ToolTip" Value="{Binding Path=Message, Mode=OneWay}" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn Header="Status" Width="100" CanUserSort="True" SortMemberPath="Status">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <ProgressBar IsIndeterminate="False" MinWidth="100" MinHeight="20"
                                                     Maximum="{Binding Path=Limit}"
                                                     Value="{Binding Path=DownloadCount}" ToolTip="{Binding Path=DownloadCount}"
                                                     Visibility="{Binding Path=Status, Converter={StaticResource JobStatusConverter}, Mode=OneWay}">
                                        </ProgressBar>
                                        <TextBlock Text="{Binding Path=Status, Mode=OneWay}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Edit"
                            Command="{x:Static local:BatchDownloadPage.EditJobCommand}" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </ScrollViewer>
        </DockPanel>
    </Grid>
</Page>